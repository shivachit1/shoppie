[{"/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/index.js":"1","/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/App.js":"2","/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Navbar.js":"3","/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Gloves.js":"4","/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Beanies.js":"5","/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/FaceMasks.js":"6","/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Product.js":"7","/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Home.js":"8"},{"size":217,"mtime":1610910795000,"results":"9","hashOfConfig":"10"},{"size":2689,"mtime":1610913493000,"results":"11","hashOfConfig":"10"},{"size":355,"mtime":1610913534000,"results":"12","hashOfConfig":"10"},{"size":525,"mtime":1610912829000,"results":"13","hashOfConfig":"10"},{"size":544,"mtime":1610912836000,"results":"14","hashOfConfig":"10"},{"size":555,"mtime":1610912832000,"results":"15","hashOfConfig":"10"},{"size":1935,"mtime":1610912016000,"results":"16","hashOfConfig":"10"},{"size":207,"mtime":1610913389000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ec8i8q",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/index.js",[],["36","37"],"/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/App.js",["38"],"import { useEffect, useState } from \"react\"\nimport { BrowserRouter as Router, Route, Redirect} from 'react-router-dom'\nimport axios from \"axios\"\nimport Gloves from './components/Gloves'\nimport Navbar from './components/Navbar'\nimport FaceMasks from './components/FaceMasks'\nimport Beanies from './components/Beanies'\nimport Home from \"./components/Home\"\n\nfunction App() {\n  \n  const [gloves, setGloves] = useState([])\n  const [faceMasks, setFaceMasks] = useState([])\n  const [beanies, setBeanies] = useState([])\n  const [manufacturers,setManuFacturers] = useState([])\n\n  useEffect(() => {\n\n    const getData = async () =>{\n      // getting all gloves data from endpoint and saving to state\n      const glovesData = await axios.get(\"v2/products/gloves\")\n      setGloves(glovesData.data)\n      \n      // getting all facemasks data from endpoint and saving to state\n      const faceMasksData = await axios.get(\"v2/products/facemasks\")\n      setFaceMasks(faceMasksData.data)\n\n      // getting all beanies data from endpoint and saving to state\n      const beaniesData = await axios.get(\"v2/products/beanies\")\n      setBeanies(beaniesData.data)\n      \n      // getting distinct manufacturer names from Beanies data\n      const manus = [...new Set(beaniesData.data.map(data => data.manufacturer))]\n\n      // calling manufacturer api end points using array loop and promises\n      Promise.all(manus.map(manu => getAvailability(manu)))\n      .then(results => {\n        // saving all results to its app state\n          setManuFacturers(results)\n      })\n      .catch(err => {\n        // error handling \n          console.log(err)\n      })\n      \n  }\n\n\n    const getAvailability = async (manufacturName) => {\n      // calling api end point to get all products of manufacturer \n        let res = await axios.get(`v2/availability/${manufacturName}`)\n\n        // if the response is \"[]\" calling until the data is recieved\n        while(res.data.response === \"[]\"){\n          res = await axios.get(`v2/availability/${manufacturName}`)\n        }\n        return {name:manufacturName,values:res.data.response}\n    }\n    \n\n    getData()\n    \n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        \n        <div>\n          <Redirect exact from=\"/\" to=\"/gloves\" />\n          <Route path=\"/gloves\" render={()=><Gloves gloves={gloves} manufacturers={manufacturers}/>}/>\n          <Route path=\"/facemasks\" render={()=><FaceMasks faceMasks={faceMasks} manufacturers={manufacturers}/>}/>\n          <Route path=\"/beanies\" render={()=><Beanies beanies={beanies} manufacturers={manufacturers}/>}/>\n        </div>\n        \n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Navbar.js",[],"/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Gloves.js",[],"/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Beanies.js",[],"/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/FaceMasks.js",[],"/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Product.js",[],"/Volumes/BackupDrive/ReaktorAssignment/shoppie/src/components/Home.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":8,"column":8,"nodeType":"45","messageId":"46","endLine":8,"endColumn":12},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]